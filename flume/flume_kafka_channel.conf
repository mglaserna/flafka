agent1.sources = twitter-data
agent1.channels = kafka-channel
#agent1.sinks = spark


agent1.sources.twitter-data.type = com.cloudera.flume.source.TwitterSource
agent1.sources.twitter-data.consumerKey = aLxFaRJX8IOp6uXF32fCDZxSe
agent1.sources.twitter-data.consumerSecret = Gz8cczxTTmprVuW3M41o9TnM0DpIdP0vp8NW3zckcdrm6ceC41
agent1.sources.twitter-data.accessToken = 68901504-i51uwaNiw1y2pnUlm31e0XAYuU8kLaLxBbQGn9SRb
agent1.sources.twitter-data.accessTokenSecret = LXWasELRw5lf6UbvPCCF2L2sws3gnL7lyErWUIpxWhJqj
agent1.sources.twitter-data.channels = kafka-channel
agent1.sources.twitter-data.keywords = cloudera, java, bigdata, mapreduce, mahout, hbase, nosql, hadoop, hive, spark, kafka, flume, scala

agent1.sources.twitter-data.kafka.consumer.security.protocol = SASL_PLAINTEXT
agent1.sources.twitter-data.kafka.consumer.sasl.kerberos.service.name = kafka
agent1.sources.twitter-data.generateKeytabFor = $KERBEROS_PRINCIPAL



agent1.channels.kafka-channel.type = org.apache.flume.channel.kafka.KafkaChannel
agent1.channels.kafka-channel.capacity = 10000
agent1.channels.kafka-channel.transactionCapacity = 1000
agent1.channels.kafka-channel.brokerList = nvnenr1n14.novare.com.hk:9092
agent1.channels.kafka-channel.topic = twitter
agent1.channels.kafka-channel.zookeeperConnect = nvnnr1n11.novare.com.hk:2181
agent1.channels.kafka-channel.parseAsFlumeEvent = true

agent1.channels.kafka-channel.kafka.consumer.security.protocol = SASL_PLAINTEXT
agent1.channels.kafka-channel.kafka.consumer.sasl.kerberos.service.name = kafka
agent1.channels.kafka-channel.kafka.producer.security.protocol = SASL_PLAINTEXT
agent1.channels.kafka-channel.generateKeytabFor = $KERBEROS_PRINCIPAL

